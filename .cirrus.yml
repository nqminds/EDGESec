task:
  name: FreeBSD
  freebsd_instance:
    matrix:
      - image_family: freebsd-14-0-snap
      - image_family: freebsd-13-1
  install_script: |
    # autoconf/automake/pkgconf is required by sqlite
    # bison/libtool/gettext is required by util-linux (uuid library)
    pkg install -y cmake llvm git lcov autoconf automake bison libtool gettext pkgconf
  install_check_version_script: |
    llvm-cov gcov --version
    clang --version
  configure_script: |
    cmake --preset freebsd -DCONFIGURE_COVERAGE=BOOL:ON
  build_script: |
    cmake --build --preset freebsd --parallel "$(($(sysctl -n hw.ncpu) + 1))"
  env:
    # list of tests that are currently failing on FreeBSD
    FAILING_TESTS: test_edgesec test_dnsmasq test_mdns_service
  test_script: |
    exclude_regex=""
    for failing_test in $FAILING_TESTS; do
      exclude_regex="${exclude_regex}|(${failing_test})"
    done
    exclude_regex="${exclude_regex:1}" # remove first | in string

    ctest --preset freebsd --output-on-failure --exclude-regex "$exclude_regex"
  test_failing_tests_script: |
    # double-check that failing tests actually fail
    # if they don't fail, then we should be testing them normally
    for failing_test in $FAILING_TESTS; do
      if ctest --preset freebsd --output-on-failure --tests-regex "$failing_test"; then
        >&2 echo "Expected test $failing_test to fail but it passed! Please update .cirrus.yml if this test now works."
        exit 1
      fi
    done
  # test_with_coverage_script: |
  #   cmake --build --preset freebsd --parallel "$(($(sysctl -n hw.ncpu) + 1))" --target coverage
  # uploading coverage is currently a bit difficult
  # since the codecoverage uploader doesn't yet support FreeBSD
