Source: edgesec
Section: net
Priority: optional
Maintainer: Alois Klink <alois@nquiringminds.com>
Build-Depends: debhelper-compat (= 12),
    git, ca-certificates, cmake (>=3.15.0), 
    doxygen, graphviz, texinfo,
    libnl-genl-3-dev, libnl-route-3-dev,
    automake, autoconf, flex, bison,
    libtool-bin, pkg-config,
    libjson-c-dev,
    libgnutls28-dev, libssl-dev,
    protobuf-compiler-grpc:native, libprotobuf-dev, libgrpc++-dev,
    libcmocka-dev (>=1.1.5),
    libmnl-dev (>= 1.0.4)
Standards-Version: 4.5.0
Homepage: https://github.com/nqminds/EDGESec
Vcs-Browser: https://github.com/nqminds/EDGESec
Vcs-Git: https://github.com/nqminds/EDGESec.git

Package: edgesec
Architecture: any
Multi-Arch: foreign
Depends: libedgesec (= ${binary:Version}),
    edgesec-common (= ${source:Version}),
    edgesec-capsrv (= ${binary:Version}),
    edgesec-revclient (= ${binary:Version}),
    edgesec-mdnsf (= ${binary:Version}),
    ${shlibs:Depends},
    ${misc:Depends},
    dnsmasq, jq
Description: NquiringMinds EDGESec Network Security Router.
 This is NquiringMind's EDGESec Network Analyser.
 It usually creates a secure and paritioned Wifi access point, using vlans,
 and can analyse network traffic.
 .
 The management of each service is controlled by the tool engine,
 which has the ability to configure and start the execution process.
 .
 First, the engine executes the supervisor service, which has the role
 of registering network joining and DHCP requests.
 It also exposes a command interface in the form of a UNIX domain socket
 that can be used by other application or services the control the connected
 network devices.
 .
 Second, the engine executes the software access point (AP) service that
 creates a managed AP, which allows every network device to connect to it.
 The AP allows setting individual network-joining credentials for each
 connecting device.
 .
 Third, the engine executes the subnet service which creates subnets for
 give virtual LAN (VLAN) IDs and IP ranges. The software AP service maps
 subsequently a connected network device to a subnet.
 .
 Fourth, the engine executes the DHCP service that has the role of assigning
 IP addresses to connected devices.
 .
 Fifth, the engine executes the RADIUS server, which sends access control
 information to the software AP. The access information contains the network
 joining credentials and the accept/deny MAC address information.
 .
 Sixth, the engine execute the state machine service,
 which represents the core of the network monitoring and management process.
 The state machine monitors the state of each connected network device by
 employing information from the supevisor service.
 It also uses the capture service, which executes self contained traffic
 capturing routines to monitor the flow of packet and disect identify the
 device types.

Package: edgesec-common
Architecture: all
Description: NquiringMinds EDGESec common files.
 This includes config files and CA certificates
 that may be shared with all binaries.

Package: edgesec-mdnsf
Architecture: any
Multi-Arch: foreign
Depends: libedgesec (= ${binary:Version}),
    edgesec-common (= ${source:Version}),
    ${shlibs:Depends},
    ${misc:Depends}
Description: NquiringMinds EDGESEC mdns forwarder.
 Forwards and captures EDGESEC mDNS network traffic for each connected device.
 The resulting captured mDNS traffic is forwarded across subnets and bridge
 commands are issued accordingly.

Package: edgesec-capsrv
Architecture: any
Multi-Arch: foreign
Depends: libedgesec (= ${binary:Version}),
    edgesec-common (= ${source:Version}),
    ${shlibs:Depends},
    ${misc:Depends}
Description: NquiringMinds EDGESEC capture server.
 Monitors and captures EDGESEC network traffic for each connected device.
 The resulting traffic analytics is sent to the network controller
 for device management.

Package: edgesec-revclient
Architecture: any
Multi-Arch: foreign
Depends: libedgesec (= ${binary:Version}),
    edgesec-common (= ${source:Version}),
    ${shlibs:Depends},
    ${misc:Depends}
Description: NquiringMinds EDGESEC reverse connection client.
 Connects to a `edgesec-revsrv` cloud endpoint to
 create a reverse connection to the EDGESEC device.
 This is especially useful when the device is non-publically
 accessible due to NAT/router firewalls.

Package: libedgesec
Section: libs
Architecture: any
Multi-Arch: same
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends}, ${shlibs:Depends}
Description: Shared library files required for edgesec packages.
