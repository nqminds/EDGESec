add_subdirectory(utils)
add_subdirectory(supervisor)
add_subdirectory(ap)
add_subdirectory(dhcp)
add_subdirectory(firewall)
if (USE_RADIUS_SERVICE)
  add_subdirectory(radius)
endif ()
if (USE_CRYPTO_SERVICE)
  add_subdirectory(crypt)
endif ()
if (USE_MDNS_SERVICE)
  add_subdirectory(dns)
endif ()
add_subdirectory(capture)


add_library(sqlhook SHARED sqlhook.c)
target_compile_options(sqlhook PRIVATE -fPIC)
target_link_libraries(sqlhook PRIVATE domain os SQLite::SQLite3)

add_library(engine engine.c)
target_include_directories(engine PRIVATE SQLite::SQLite3)
if (USE_RADIUS_SERVICE)
  target_compile_definitions(engine PUBLIC WITH_RADIUS_SERVICE)
  target_link_libraries(engine PRIVATE radius_service)
endif ()
if (USE_CRYPTO_SERVICE)
  target_link_libraries(engine PRIVATE crypt_service)
endif ()
if (USE_MDNS_SERVICE)
  target_compile_definitions(engine PUBLIC WITH_MDNS_SERVICE)
  target_link_libraries(engine PRIVATE mdns_service)
endif ()
target_link_libraries(engine PRIVATE capture_service net log iface_mapper os sqlite_macconn_writer firewall_service eloop supervisor network_commands mac_mapper ap_service firewall_service dhcp_service)

add_library(config config.c)
target_include_directories(config PUBLIC $<TARGET_PROPERTY:iface,INCLUDE_DIRECTORIES>)
target_link_libraries(config PUBLIC supervisor_config PRIVATE minIni os log)

add_executable(edgesec edgesec.c)
if (USE_CRYPTO_SERVICE)
  target_include_directories(edgesec PRIVATE ${PROJECT_BINARY_DIR} ${LIBOPENSSL_INCLUDE_PATH})
else ()
  target_include_directories(edgesec PRIVATE ${PROJECT_BINARY_DIR})
endif ()
target_link_libraries(edgesec PRIVATE eloop config engine minIni os hashmap)
# link time optimization
set_target_properties(edgesec PROPERTIES INTERPROCEDURAL_OPTIMIZATION TRUE)
