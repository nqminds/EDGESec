add_subdirectory(utils)
add_subdirectory(supervisor)
add_subdirectory(radius)
add_subdirectory(ap)
add_subdirectory(dhcp)
add_subdirectory(subnet)
add_subdirectory(system)
add_subdirectory(crypt)

if (BUILD_CAPTURE_SERVICE)
  add_subdirectory(capture)
endif ()

add_library(engine engine.c)
if (BUILD_NL_LIB)
  target_include_directories(engine PRIVATE ${LIBNL_INCLUDE_DIR} ${LIBSQLITE_INCLUDE_DIR})
  target_link_libraries(engine crypt_service log if iw os sqlite_macconn_writer sqlite_fingerprint_writer subnet_service system_checks eloop supervisor network_commands radius_service mac_mapper ap_service iptables dhcp_service)
else ()
  target_include_directories(engine PRIVATE ${LIBSQLITE_INCLUDE_DIR})
  target_link_libraries(engine crypt_service log if os sqlite_macconn_writer sqlite_fingerprint_writer subnet_service system_checks eloop supervisor network_commands radius_service mac_mapper ap_service iptables dhcp_service)
endif ()

add_library(config config.c)
target_include_directories(config PUBLIC ${LIBSQLITE_INCLUDE_DIR})
target_link_libraries(config minIni mac_mapper)

if (BUILD_CAPTURE_SERVICE)
  add_executable(capsrv capsrv.c)
  target_include_directories(capsrv PRIVATE ${LIBPCAP_INCLUDE_PATH} ${PROJECT_BINARY_DIR})
  target_link_libraries(capsrv capture_service capture_config config minIni os hashmap ${LIBPCAP_LIB})
endif ()

if (BUILD_REST_SERVER AND BUILD_MICROHTTPD_LIB)
  add_executable(restsrv restsrv.c)
  target_include_directories(restsrv PRIVATE ${LIBMICROHTTPD_INCLUDE_DIR} ${PROJECT_BINARY_DIR})
  target_link_libraries(restsrv config minIni cryptou os hashmap ap_service cmd_processor ${LIBMICROHTTPD_LIB})
endif ()

if (BUILD_SQLSYNC_SERVICE)
  add_executable(sqlsyncsrv sqlsyncsrv.cc)
  target_include_directories(sqlsyncsrv PRIVATE ${PROJECT_BINARY_DIR} ${LIBGRPC_INCLUDE_PATH} ${LIBSQLITE_INCLUDE_DIR})
  target_link_libraries(sqlsyncsrv PUBLIC sqlite_header_writer os sqlite_grpc_proto ${LIBGRPCPP_REFLECTION_LIB} ${LIBGRPCPP_LIB} ${LIBPROTOBUF_LIB} ${LIBSQLITE_LIB})
endif ()

if (BUILD_REVERSE_SERVICE)
  add_executable(revclient revclient.cc)
  target_include_directories(revclient PRIVATE ${PROJECT_BINARY_DIR} ${LIBGRPC_INCLUDE_PATH})
  target_link_libraries(revclient os log reverse_grpc_proto ${LIBGRPCPP_REFLECTION_LIB} ${LIBGRPCPP_LIB} ${LIBPROTOBUF_LIB} ${LIBPTHREAD_LIB})

  add_executable(revsrv revsrv.cc)
  target_include_directories(revsrv PRIVATE ${PROJECT_BINARY_DIR} ${LIBGRPC_INCLUDE_PATH})
  target_link_libraries(revsrv os log eloop domain reverse_grpc_proto ${LIBGRPCPP_REFLECTION_LIB} ${LIBGRPCPP_LIB} ${LIBPROTOBUF_LIB} ${LIBPTHREAD_LIB})
endif ()

add_executable(edgesec edgesec.c)
target_include_directories(edgesec PRIVATE ${PROJECT_BINARY_DIR} ${LIBOPENSSL_INCLUDE_PATH})
target_link_libraries(edgesec eloop config engine minIni os hashmap)
