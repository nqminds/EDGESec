
#include "middlewares_list.h"

#cmakedefine _CAPTURE_MIDDLEWARES_DEFINITIONS @_CAPTURE_MIDDLEWARES_DEFINITIONS@
#cmakedefine _CAPTURE_MIDDLEWARES_LIST_INITIALISER @_CAPTURE_MIDDLEWARES_LIST_INITIALISER@

#ifdef _CAPTURE_MIDDLEWARES_DEFINITIONS
_CAPTURE_MIDDLEWARES_DEFINITIONS
#endif

#ifndef _CAPTURE_MIDDLEWARES_LIST_INITIALISER
// if this not defined, set it nothing, a.k.a. empty list
#define _CAPTURE_MIDDLEWARES_LIST_INITIALISER
#endif

UT_array *assign_middlewares(void) {
  UT_array *handlers = NULL;

  utarray_new(handlers, &middleware_icd);

  struct capture_middleware const capture_middlewares[] = {_CAPTURE_MIDDLEWARES_LIST_INITIALISER};

  const size_t middleware_lengths = sizeof(capture_middlewares) / sizeof(capture_middlewares[0]);

  for (size_t i = 0; i < middleware_lengths; i++) {
    struct middleware_handlers handler = {
        .f = capture_middlewares[i],
        .context = NULL,
    };
    utarray_push_back(handlers, &handler);
  }

  return handlers;
}
