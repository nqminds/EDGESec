/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: icmp6.proto */

#ifndef PROTOBUF_C_icmp6_2eproto__INCLUDED
#define PROTOBUF_C_icmp6_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

typedef struct Icmp6__Icmp6Schema Icmp6__Icmp6Schema;

/* --- enums --- */

/* --- messages --- */

struct Icmp6__Icmp6Schema {
  ProtobufCMessage base;
  /*
   * Packet id
   */
  char *id;
  /*
   * Packet type field
   */
  uint32_t icmp6_type;
  /*
   * Packet code field
   */
  uint32_t icmp6_code;
  /*
   * Packet checksum field
   */
  uint32_t icmp6_cksum;
  /*
   * Packet type-specific field
   */
  uint32_t icmp6_un_data32;
};
#define ICMP6__ICMP6_SCHEMA__INIT                                              \
  {                                                                            \
    PROTOBUF_C_MESSAGE_INIT(&icmp6__icmp6_schema__descriptor)                  \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0                              \
  }

/* Icmp6__Icmp6Schema methods */
void icmp6__icmp6_schema__init(Icmp6__Icmp6Schema *message);
size_t icmp6__icmp6_schema__get_packed_size(const Icmp6__Icmp6Schema *message);
size_t icmp6__icmp6_schema__pack(const Icmp6__Icmp6Schema *message,
                                 uint8_t *out);
size_t icmp6__icmp6_schema__pack_to_buffer(const Icmp6__Icmp6Schema *message,
                                           ProtobufCBuffer *buffer);
Icmp6__Icmp6Schema *icmp6__icmp6_schema__unpack(ProtobufCAllocator *allocator,
                                                size_t len,
                                                const uint8_t *data);
void icmp6__icmp6_schema__free_unpacked(Icmp6__Icmp6Schema *message,
                                        ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Icmp6__Icmp6Schema_Closure)(const Icmp6__Icmp6Schema *message,
                                           void *closure_data);

/* --- services --- */

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor icmp6__icmp6_schema__descriptor;

PROTOBUF_C__END_DECLS

#endif /* PROTOBUF_C_icmp6_2eproto__INCLUDED */
