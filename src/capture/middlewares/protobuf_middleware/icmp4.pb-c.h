/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: icmp4.proto */

#ifndef PROTOBUF_C_icmp4_2eproto__INCLUDED
#define PROTOBUF_C_icmp4_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Icmp4__UdpSchema Icmp4__UdpSchema;


/* --- enums --- */


/* --- messages --- */

struct  Icmp4__UdpSchema
{
  ProtobufCMessage base;
  /*
   * Packet id
   */
  char *id;
  /*
   * Packet message type
   */
  uint32_t type;
  /*
   * Packet type sub-code
   */
  uint32_t code;
  /*
   * Packet checksum
   */
  uint32_t checksum;
  /*
   * Packet gateway address
   */
  uint32_t gateway;
};
#define ICMP4__UDP_SCHEMA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&icmp4__udp_schema__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0 }


/* Icmp4__UdpSchema methods */
void   icmp4__udp_schema__init
                     (Icmp4__UdpSchema         *message);
size_t icmp4__udp_schema__get_packed_size
                     (const Icmp4__UdpSchema   *message);
size_t icmp4__udp_schema__pack
                     (const Icmp4__UdpSchema   *message,
                      uint8_t             *out);
size_t icmp4__udp_schema__pack_to_buffer
                     (const Icmp4__UdpSchema   *message,
                      ProtobufCBuffer     *buffer);
Icmp4__UdpSchema *
       icmp4__udp_schema__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   icmp4__udp_schema__free_unpacked
                     (Icmp4__UdpSchema *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Icmp4__UdpSchema_Closure)
                 (const Icmp4__UdpSchema *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor icmp4__udp_schema__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_icmp4_2eproto__INCLUDED */
