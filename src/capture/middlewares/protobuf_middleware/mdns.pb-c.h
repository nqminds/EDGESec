/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: mdns.proto */

#ifndef PROTOBUF_C_mdns_2eproto__INCLUDED
#define PROTOBUF_C_mdns_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Mdns__MdnsSchema Mdns__MdnsSchema;


/* --- enums --- */


/* --- messages --- */

struct  Mdns__MdnsSchema
{
  ProtobufCMessage base;
  /*
   * Packet id
   */
  char *id;
  /*
   * Packet Transaction ID
   */
  uint32_t tid;
  /*
   * Packet Flags
   */
  uint32_t flags;
  /*
   * Packet Questions
   */
  uint32_t nqueries;
  /*
   * Packet Answers
   */
  uint32_t nanswers;
  /*
   * Packet Authority PRs
   */
  uint32_t nauth;
  /*
   * Packet Other PRs
   */
  uint32_t nother;
  /*
   * Packet question name
   */
  char *qname;
};
#define MDNS__MDNS_SCHEMA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mdns__mdns_schema__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0, 0, (char *)protobuf_c_empty_string }


/* Mdns__MdnsSchema methods */
void   mdns__mdns_schema__init
                     (Mdns__MdnsSchema         *message);
size_t mdns__mdns_schema__get_packed_size
                     (const Mdns__MdnsSchema   *message);
size_t mdns__mdns_schema__pack
                     (const Mdns__MdnsSchema   *message,
                      uint8_t             *out);
size_t mdns__mdns_schema__pack_to_buffer
                     (const Mdns__MdnsSchema   *message,
                      ProtobufCBuffer     *buffer);
Mdns__MdnsSchema *
       mdns__mdns_schema__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mdns__mdns_schema__free_unpacked
                     (Mdns__MdnsSchema *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Mdns__MdnsSchema_Closure)
                 (const Mdns__MdnsSchema *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mdns__mdns_schema__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_mdns_2eproto__INCLUDED */
