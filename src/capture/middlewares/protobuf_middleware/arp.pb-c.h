/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: arp.proto */

#ifndef PROTOBUF_C_arp_2eproto__INCLUDED
#define PROTOBUF_C_arp_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

typedef struct Arp__ArpSchema Arp__ArpSchema;

/* --- enums --- */

/* --- messages --- */

struct Arp__ArpSchema {
  ProtobufCMessage base;
  /*
   * Packet id
   */
  char *id;
  /*
   * Packet Format of hardware address
   */
  uint32_t ar_hrd;
  /*
   * Packet Format of protocol address
   */
  uint32_t ar_pro;
  /*
   * Packet Length of hardware address
   */
  uint32_t ar_hln;
  /*
   * Packet Length of protocol address
   */
  uint32_t ar_pln;
  /*
   * Packet ARP opcode (command)
   */
  uint32_t ar_op;
  /*
   * Packet sender hardware address
   */
  char *arp_sha;
  /*
   * Packet sender protocol address
   */
  char *arp_spa;
  /*
   * Packet target hardware address
   */
  char *arp_tha;
  /*
   * Packet target protocol address *
   */
  char *arp_tpa;
};
#define ARP__ARP_SCHEMA__INIT                                                  \
  {                                                                            \
    PROTOBUF_C_MESSAGE_INIT(&arp__arp_schema__descriptor)                      \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0,                          \
        (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string,      \
        (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string       \
  }

/* Arp__ArpSchema methods */
void arp__arp_schema__init(Arp__ArpSchema *message);
size_t arp__arp_schema__get_packed_size(const Arp__ArpSchema *message);
size_t arp__arp_schema__pack(const Arp__ArpSchema *message, uint8_t *out);
size_t arp__arp_schema__pack_to_buffer(const Arp__ArpSchema *message,
                                       ProtobufCBuffer *buffer);
Arp__ArpSchema *arp__arp_schema__unpack(ProtobufCAllocator *allocator,
                                        size_t len, const uint8_t *data);
void arp__arp_schema__free_unpacked(Arp__ArpSchema *message,
                                    ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Arp__ArpSchema_Closure)(const Arp__ArpSchema *message,
                                       void *closure_data);

/* --- services --- */

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor arp__arp_schema__descriptor;

PROTOBUF_C__END_DECLS

#endif /* PROTOBUF_C_arp_2eproto__INCLUDED */
